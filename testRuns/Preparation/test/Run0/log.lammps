LAMMPS (29 Oct 2020)
#----------------------------------------------------------------------------------------#

#------------------------------ General variables ---------------------------------------#
 # Simulation variables

  variable        T         equal     300

 # Time variables

  variable        t_eq      equal     100000        # Equlibration time
  variable        dt        equal     0.001         # Time step
  variable        damp_t    equal     200*${dt}     # Thermostat damping
  variable        damp_t    equal     200*0.001     
  variable        damp_p    equal     2500*${dt}    # Barostat damping
  variable        damp_p    equal     2500*0.001    
  variable        nthermo   equal     1000     		# output frequency
#----------------------------------------------------------------------------------------#

  units           metal
  atom_style      atomic
  read_data       data.txt
Reading data file ...
  orthogonal box = (0.0000000 0.0000000 0.0000000) to (1.0000000 1.0000000 1.0000000)
  1 by 1 by 1 MPI processor grid
  reading atoms ...
  1000 atoms
  read_data CPU = 0.003 seconds

# Interatomic potential information.

  neigh_modify    delay   0
  pair_style      meam/c
  pair_coeff      * *  ${MEAM_library_DIR}/library_CoNiCrFeMn.meam Co Ni Cr Fe Mn ${MEAM_library_DIR}/parameters.meam Co Ni Cr Fe Mn
  pair_coeff      * *  /home/kamran.karimi1/Project/git/CrystalPlasticity/testRuns/dataFiles/library_CoNiCrFeMn.meam Co Ni Cr Fe Mn ${MEAM_library_DIR}/parameters.meam Co Ni Cr Fe Mn
  pair_coeff      * *  /home/kamran.karimi1/Project/git/CrystalPlasticity/testRuns/dataFiles/library_CoNiCrFeMn.meam Co Ni Cr Fe Mn /home/kamran.karimi1/Project/git/CrystalPlasticity/testRuns/dataFiles/parameters.meam Co Ni Cr Fe Mn
  timestep        ${dt}
  timestep        0.001

#---------------------------------   Equilibrate in NPT ensemble  ----------------------#
#  fix             1         all npt temp $T $T ${damp_t} iso 0.0 0.0 ${damp_p} fixedpoint 0.0 0.0 0.0
#  run             ${t_eq}
#  thermo          0
#  unfix           1
#  reset_timestep  0


#-------------------                 Simulation & output setup    ---------------------------
  fix             1             all npt temp $T $T ${damp_t} iso 0.0 0.0 ${damp_p} fixedpoint 0.0 0.0 0.0
  fix             1             all npt temp 300 $T ${damp_t} iso 0.0 0.0 ${damp_p} fixedpoint 0.0 0.0 0.0
  fix             1             all npt temp 300 300 ${damp_t} iso 0.0 0.0 ${damp_p} fixedpoint 0.0 0.0 0.0
  fix             1             all npt temp 300 300 0.2 iso 0.0 0.0 ${damp_p} fixedpoint 0.0 0.0 0.0
  fix             1             all npt temp 300 300 0.2 iso 0.0 0.0 2.5 fixedpoint 0.0 0.0 0.0
  variable        energy        equal etotal/atoms
  variable        dU            equal pe/atoms
  variable        Temp          equal temp
  variable        vol           equal ((vol/atoms)*0.6022)
  variable        E2            equal v_energy*v_energy
  variable        V2            equal v_vol*v_vol
  thermo_style    custom        step temp etotal pe v_energy v_dU v_vol v_E2 v_Temp
  fix             vec1          all vector  1 v_vol
  fix             vec2          all vector  1 v_energy
  fix             vec3          all vector  1 v_Temp
  fix             Esq           all vector  1 v_E2
  fix             Vsq           all vector  1 v_V2
  thermo          ${nthermo}
  thermo          1000
  thermo_modify   lost      ignore
  dump    1 all custom ${nthermo} ${OUT_PATH}/dumpFile.xyz id type x y z
  dump    1 all custom 1000 ${OUT_PATH}/dumpFile.xyz id type x y z
  dump    1 all custom 1000 ./dumpFile.xyz id type x y z
  dump_modify 1 flush yes format line "%d %d %4.3e %4.3e %4.3e"
#  run ${t_eq}
  print   "# Temp    T_ave      vol_med   vol2_med   std_vol   E_med   E2_med  std_E  "   file    Thermo_C.dat
# Temp    T_ave      vol_med   vol2_med   std_vol   E_med   E2_med  std_E  
  variable        vol_med       equal ave(f_vec1)
  variable        vol2_med      equal ave(f_Vsq)
  variable        std_vol       equal (${vol2_med}-(${vol_med}*${vol_med}))
  variable        std_vol       equal (-nan-(${vol_med}*${vol_med}))
  variable        std_vol       equal (-nan-(-nan*${vol_med}))
  variable        std_vol       equal (-nan-(-nan*-nan))
  variable        E_med         equal ave(f_vec2)
  variable        E2_med        equal ave(f_Esq)
  variable        std_E         equal (${E2_med}-(${E_med}*${E_med}))
  variable        std_E         equal (-nan-(${E_med}*${E_med}))
  variable        std_E         equal (-nan-(-nan*${E_med}))
  variable        std_E         equal (-nan-(-nan*-nan))
  variable        T_ave         equal ave(f_vec3)
  print   "  300  ${T_ave}  ${vol_med}  ${vol2_med}  ${std_vol}  ${E_med}  ${E2_med}  ${std_E}"   append  Thermo_C.dat
ERROR: Variable std_vol: Invalid thermo keyword 'nan' in variable formula (../variable.cpp:2142)
Last command:   300  ${T_ave
